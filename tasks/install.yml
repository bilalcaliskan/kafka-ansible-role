---

- name: Get service facts
  service_facts:

- name: Set fact before installation
  set_fact:
    kafka_installed: false
  when: ansible_facts.services["kafka.service"] is not defined

- name: Install required packages
  yum:
    name: "{{ item }}"
    state: present
  loop: "{{ required_packages }}"

- name: Ensure {{ group }} group exists
  group:
    name: "{{ group }}"
    state: present

- name: Ensure {{ user }} user exists
  user:
    name: "{{ user }}"
    shell: /sbin/nologin
    group: "{{ group }}"

- name: Check if tar file exists
  stat:
    path: "{{ file_path }}"
  register: file_stat_result

- name: Download tar.gz file
  get_url:
    url: "{{ download_url }}"
    dest: "{{ file_path }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0644
  when: not file_stat_result.stat.exists

- name: Check if directory exists
  stat:
    path: "{{ folder_path }}"
  register: directory_stat_result

- name: Extract tar.gz file
  unarchive:
    src: "{{ file_path }}"
    dest: "{{ base_dir }}/"
    owner: "{{ user }}"
    group: "{{ group }}"
    remote_src: true
  when: not directory_stat_result.stat.exists

- name: Create a symlink of unarchived directory
  file:
    src: "{{ folder_path }}"
    dest: "{{ link_path }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    state: link

- name: Create data directory
  file:
    path: "{{ data_dir_path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0770

- name: Include setup_storage.yml conditionally
  include_tasks: setup_storage.yml
  when: (kafka_enable_persistency | bool)

- name: Transfer template files to the remote location
  template:
    src: "{{ item.src_path }}"
    dest: "{{ item.dest_path }}"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - {src_path: server.properties.j2, dest_path: "{{ config_dir_path }}/server.properties", user: "{{ user }}", group: "{{ group }}", mode: 0644}
    - {src_path: kafka.service.j2, dest_path: "{{ systemd_service_file_path }}", user: root, group: root, mode: 0644}
  notify:
    - start and enable kafka service
    - create a symlink of kafka log directory

- name: Set kernel parameters for Kafka
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop: "{{ os_required_parameters }}"

- name: Ensure firewalld is started and enabled
  service:
    name: firewalld
    state: started
    enabled: true
  changed_when: false

- name: Allow kafka port
  firewalld:
    port: 9092/tcp
    permanent: true
    immediate: true
    state: enabled
  ignore_errors: true

- name: Recursively change ownership of unarchived directory
  file:
    path: "{{ folder_path }}"
    state: directory
    recurse: true
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Set fact after installation
  set_fact:
    kafka_installed: true
  when: ansible_facts.services["kafka.service"] is defined

...
